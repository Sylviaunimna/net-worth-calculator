{"ast":null,"code":"var _jsxFileName = \"/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/components/calculator.jsx\";\nimport React from \"react\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculator extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      currency: \"CAD\",\n      prev_currency: \"CAD\",\n      defaultLabelStyle: {\n        fontSize: \"2px\",\n        fontFamily: \"sans-serif\",\n        fill: \"white\"\n      },\n      isEditing: false,\n      cur_codes: {\n        CAD: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 12\n        }, this),\n        USD: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 12\n        }, this),\n        NGN: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u20A6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 12\n        }, this),\n        EUR: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u20AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 12\n        }, this),\n        INR: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u20B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 12\n        }, this),\n        GBP: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 12\n        }, this),\n        KRW: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u20A8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 12\n        }, this),\n        PHP: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u20B1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }, this),\n        AED: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u062F.\\u0625\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 12\n        }, this),\n        JPY: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xA5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 12\n        }, this)\n      },\n      values: {\n        chequing: 2000,\n        savings_for_taxes: 4000.0,\n        rainy_day_fund: 506.0,\n        savings_for_fun: 5000.0,\n        savings_for_travel: 400.0,\n        savings_for_personal_development: 200.0,\n        investment_1: 5000.0,\n        investment_2: 60000.0,\n        investment_3: 24000.0,\n        primary_home: 455000.0,\n        second_home: 1564321.0,\n        other: 2000.0,\n        credit_card_1: 4342.0,\n        credit_card_2: 322.0,\n        mortgage_1: 250999.0,\n        mortgage_2: 632634.0,\n        line_of_credit: 10000.0,\n        investment_loan: 10000.0,\n        credit_card_1_mp: 200,\n        credit_card_2_mp: 150,\n        mortgage_1_mp: 2000,\n        mortgage_2_mp: 3500,\n        line_of_credit_mp: 500,\n        investment_loan_mp: 700\n      },\n      total_assets: 2122427.0,\n      total_liabilities: 908297.0,\n      net_worth: 1214130.0,\n      testtt: {\n        id: \"chequing\",\n        value: 2000,\n        text: \"Chequing\"\n      }\n    };\n\n    this.updateInputValue = async e => {\n      //gets called when an amount is edited and calls the server to get the updated totals\n      let values = this.state.values;\n      values[e.target.name] = e.target.value === \"\" ? 0 : e.target.value;\n      await this.setState({\n        values: values\n      });\n      fetch(\"/calculator/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state)\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      }).then(data => {\n        this.setState({\n          total_assets: data.total_assets,\n          total_liabilities: data.total_liabilities,\n          net_worth: data.net_worth\n        });\n      });\n    };\n\n    this.convertCurrency = async e => {\n      //gets called when a different currency is selected\n      var fromCurrency = encodeURIComponent(this.state.prev_currency);\n      var toCurrency = encodeURIComponent(e.target.value);\n      fetch(\"/convert-currency/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          values: this.state.values,\n          fromCurrency: fromCurrency,\n          toCurrency: toCurrency\n        })\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      }).then(data => {\n        this.setState({\n          values: data.updated_values,\n          currency: toCurrency,\n          prev_currency: toCurrency,\n          total_assets: data.newTotalAssets,\n          total_liabilities: data.newTotalLiabilities,\n          net_worth: data.newNetWorth\n        });\n      });\n    };\n  }\n\n  toggleEditing() {\n    // used for formatting the input elements for the amount\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  }\n\n  formatToCurrency(number) {\n    // changes the format of the amount to currency format\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"net\",\n            className: \"display-1\",\n            children: \"Net\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"worth\",\n            className: \"display-1\",\n            children: \"Worth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"calc\",\n            className: \"display-1\",\n            children: \"Calculator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"blue\",\n                children: \"\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Assets:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: this.state.cur_codes[this.state.currency]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), this.formatToCurrency(this.state.total_assets)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"orange\",\n                children: \"\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Liabilities:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: this.state.cur_codes[this.state.currency]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), this.formatToCurrency(this.state.total_liabilities)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Net Worth:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: this.state.cur_codes[this.state.currency]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this), this.formatToCurrency(this.state.net_worth)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          label: _ref => {\n            let {\n              dataEntry\n            } = _ref;\n            return `${Math.round(dataEntry.percentage)} %`;\n          },\n          animation: true,\n          animationDuration: 500,\n          animationEasing: \"ease-out\",\n          center: [50, 50],\n          data: [{\n            title: \"Assets\",\n            value: parseFloat(this.state.total_assets),\n            color: \"#0066CC\"\n          }, {\n            title: \"Liabilities\",\n            value: parseFloat(this.state.total_liabilities),\n            color: \"#FFA500\"\n          }],\n          labelPosition: 90,\n          labelStyle: this.state.defaultLabelStyle // lengthAngle={360}\n          ,\n          lineWidth: 25,\n          paddingAngle: 0,\n          radius: 45,\n          viewBoxSize: [200, 200]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), \"}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"currency-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"currencies\",\n            children: \"Currency: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"currencies\",\n            name: \"currencies\",\n            className: \"form-select form-select-sm\",\n            \"aria-label\": \".form-select-sm example\",\n            onChange: this.convertCurrency,\n            children: Object.entries(this.state.cur_codes).map(_ref2 => {\n              let [key, value] = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Assets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cash and Investments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Chequing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"chequing\",\n                    value: Math.round(this.state.values[\"chequing\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"chequing\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"chequing\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Savings for Taxes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"savings_for_taxes\",\n                    value: Math.round(this.state.values[\"savings_for_taxes\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"savings_for_taxes\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"savings_for_taxes\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Rainy Day Fund\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"rainy_day_fund\",\n                    value: Math.round(this.state.values[\"rainy_day_fund\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"rainy_day_fund\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"rainy_day_fund\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Savings for Fun\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"savings_for_fun\",\n                    value: Math.round(this.state.values[\"savings_for_fun\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"savings_for_fun\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"savings_for_fun\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Savings for Travel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"savings_for_travel\",\n                    value: Math.round(this.state.values[\"savings_for_travel\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"savings_for_travel\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"savings_for_travel\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Savings for Personal Development\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"savings_for_personal_development\",\n                    value: Math.round(this.state.values[\"savings_for_personal_development\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"savings_for_personal_development\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"savings_for_personal_development\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Investment 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"investment_1\",\n                    value: Math.round(this.state.values[\"investment_1\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"investment_1\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"investment_1\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Investment 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"investment_2\",\n                    value: Math.round(this.state.values[\"investment_2\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"investment_2\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"investment_2\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Investment 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"investment_3\",\n                    value: Math.round(this.state.values[\"investment_3\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"investment_3\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"investment_3\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Long Term Assets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Primary Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"primary_home\",\n                    value: Math.round(this.state.values[\"primary_home\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"primary_home\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"primary_home\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Second Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"second_home\",\n                    value: Math.round(this.state.values[\"second_home\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"second_home\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"second_home\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 620,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"other\",\n                    value: Math.round(this.state.values[\"other\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"other\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"other\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Liabilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Short Term Liabilities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Monthly Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Credit Card 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [this.state.cur_codes[this.state.currency], this.formatToCurrency(Math.round(this.state.values[\"credit_card_1_mp\"]))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 690,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"credit_card_1\",\n                    value: Math.round(this.state.values[\"credit_card_1\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"credit_card_1\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"credit_card_1\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 706,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Credit Card 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [this.state.cur_codes[this.state.currency], this.formatToCurrency(Math.round(this.state.values[\"credit_card_2_mp\"]))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"credit_card_2\",\n                    value: Math.round(this.state.values[\"credit_card_2\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"credit_card_2\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"credit_card_2\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 746,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Long Term Debt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Mortgage 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [this.state.cur_codes[this.state.currency], this.formatToCurrency(Math.round(this.state.values[\"mortgage_1_mp\"]))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 775,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"mortgage_1\",\n                    value: Math.round(this.state.values[\"mortgage_1\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 782,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"mortgage_1\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"mortgage_1\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 791,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 774,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Mortage 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [this.state.cur_codes[this.state.currency], this.formatToCurrency(Math.round(this.state.values[\"mortgage_2_mp\"]))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"mortgage_2\",\n                    value: Math.round(this.state.values[\"mortgage_2\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 822,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"mortgage_2\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"mortgage_2\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Line of Credit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 846,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [this.state.cur_codes[this.state.currency], this.formatToCurrency(Math.round(this.state.values[\"line_of_credit_mp\"]))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 855,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"line_of_credit\",\n                    value: Math.round(this.state.values[\"line_of_credit\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 862,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"line_of_credit\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"line_of_credit\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 871,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 854,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Investment Loan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [this.state.cur_codes[this.state.currency], this.formatToCurrency(Math.round(this.state.values[\"investment_loan_mp\"]))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group input-group-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-group-text\",\n                    id: \"inputGroup-sizing-sm\",\n                    children: this.state.cur_codes[this.state.currency]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 895,\n                    columnNumber: 21\n                  }, this), this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    name: \"investment_loan\",\n                    value: Math.round(this.state.values[\"investment_loan\"]),\n                    onChange: this.updateInputValue,\n                    onBlur: this.toggleEditing.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 902,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"investment_loan\",\n                    value: this.formatToCurrency(Math.round(this.state.values[\"investment_loan\"])),\n                    onFocus: this.toggleEditing.bind(this),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 911,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 894,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/components/calculator.jsx"],"names":["React","PieChart","Calculator","Component","state","currency","prev_currency","defaultLabelStyle","fontSize","fontFamily","fill","isEditing","cur_codes","CAD","USD","NGN","EUR","INR","GBP","KRW","PHP","AED","JPY","values","chequing","savings_for_taxes","rainy_day_fund","savings_for_fun","savings_for_travel","savings_for_personal_development","investment_1","investment_2","investment_3","primary_home","second_home","other","credit_card_1","credit_card_2","mortgage_1","mortgage_2","line_of_credit","investment_loan","credit_card_1_mp","credit_card_2_mp","mortgage_1_mp","mortgage_2_mp","line_of_credit_mp","investment_loan_mp","total_assets","total_liabilities","net_worth","testtt","id","value","text","updateInputValue","e","target","name","setState","fetch","method","headers","Accept","body","JSON","stringify","then","res","ok","json","data","convertCurrency","fromCurrency","encodeURIComponent","toCurrency","updated_values","newTotalAssets","newTotalLiabilities","newNetWorth","toggleEditing","formatToCurrency","number","toString","replace","render","dataEntry","Math","round","percentage","title","parseFloat","color","Object","entries","map","key","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nclass Calculator extends React.Component {\n  state = {\n    currency: \"CAD\",\n    prev_currency: \"CAD\",\n    defaultLabelStyle: {\n      fontSize: \"2px\",\n      fontFamily: \"sans-serif\",\n      fill: \"white\"\n    },\n    isEditing: false,\n    cur_codes: {\n      CAD: <span>&#36;</span>,\n      USD: <span>&#36;</span>,\n      NGN: <span>&#8358;</span>,\n      EUR: <span>&euro;</span>,\n      INR: <span>&#8377;</span>,\n      GBP: <span>&pound;</span>,\n      KRW: <span>&#8360;</span>,\n      PHP: <span>&#8369;</span>,\n      AED: <span>&#x62f;&#x2e;&#x625;</span>,\n      JPY: <span>&#165;</span>\n    },\n    values: {\n      chequing: 2000,\n      savings_for_taxes: 4000.0,\n      rainy_day_fund: 506.0,\n      savings_for_fun: 5000.0,\n      savings_for_travel: 400.0,\n      savings_for_personal_development: 200.0,\n      investment_1: 5000.0,\n      investment_2: 60000.0,\n      investment_3: 24000.0,\n      primary_home: 455000.0,\n      second_home: 1564321.0,\n      other: 2000.0,\n      credit_card_1: 4342.0,\n      credit_card_2: 322.0,\n      mortgage_1: 250999.0,\n      mortgage_2: 632634.0,\n      line_of_credit: 10000.0,\n      investment_loan: 10000.0,\n      credit_card_1_mp: 200,\n      credit_card_2_mp: 150,\n      mortgage_1_mp: 2000,\n      mortgage_2_mp: 3500,\n      line_of_credit_mp: 500,\n      investment_loan_mp: 700\n    },\n    total_assets: 2122427.0,\n    total_liabilities: 908297.0,\n    net_worth: 1214130.0,\n    testtt: {\n      id: \"chequing\",\n      value: 2000,\n      text: \"Chequing\"\n    }\n  };\n\n  updateInputValue = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    let values = this.state.values;\n    values[e.target.name] = e.target.value === \"\" ? 0 : e.target.value;\n    await this.setState({ values: values });\n    fetch(\"/calculator/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        this.setState({\n          total_assets: data.total_assets,\n          total_liabilities: data.total_liabilities,\n          net_worth: data.net_worth\n        });\n      });\n  };\n\n  convertCurrency = async e => {\n    //gets called when a different currency is selected\n    var fromCurrency = encodeURIComponent(this.state.prev_currency);\n    var toCurrency = encodeURIComponent(e.target.value);\n    fetch(\"/convert-currency/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        values: this.state.values,\n        fromCurrency: fromCurrency,\n        toCurrency: toCurrency\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        this.setState({\n          values: data.updated_values,\n          currency: toCurrency,\n          prev_currency: toCurrency,\n          total_assets: data.newTotalAssets,\n          total_liabilities: data.newTotalLiabilities,\n          net_worth: data.newNetWorth\n        });\n      });\n  };\n\n  toggleEditing() {\n    // used for formatting the input elements for the amount\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n\n  formatToCurrency(number) {\n    // changes the format of the amount to currency format\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"left\">\n          <h1 id=\"title\">\n            <span id=\"net\" className=\"display-1\">\n              Net\n            </span>\n            <br></br>\n            <span id=\"worth\" className=\"display-1\">\n              Worth\n            </span>\n            <br></br>\n            <span id=\"calc\" className=\"display-1\">\n              Calculator\n            </span>\n          </h1>\n          <br></br>\n          <br></br>\n          <table className=\"table\">\n            <tbody>\n              <tr>\n                <td className=\"blue\">&nbsp;</td>\n                <td>Total Assets:</td>\n                <td>\n                  <span>{this.state.cur_codes[this.state.currency]}</span>\n                  {this.formatToCurrency(this.state.total_assets)}\n                </td>\n              </tr>\n              <tr>\n                <td className=\"orange\">&nbsp;</td>\n                <td>Total Liabilities:</td>\n                <td>\n                  <span>{this.state.cur_codes[this.state.currency]}</span>\n                  {this.formatToCurrency(this.state.total_liabilities)}\n                </td>\n              </tr>\n              <tr>\n                <td></td>\n                <td>Net Worth:</td>\n                <td>\n                  <span>{this.state.cur_codes[this.state.currency]}</span>\n                  {this.formatToCurrency(this.state.net_worth)}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <PieChart\n            label={({ dataEntry }) => `${Math.round(dataEntry.percentage)} %`}\n            animation\n            animationDuration={500}\n            animationEasing=\"ease-out\"\n            center={[50, 50]}\n            data={[\n              {\n                title: \"Assets\",\n                value: parseFloat(this.state.total_assets),\n                color: \"#0066CC\"\n              },\n              {\n                title: \"Liabilities\",\n                value: parseFloat(this.state.total_liabilities),\n                color: \"#FFA500\"\n              }\n            ]}\n            labelPosition={90}\n            labelStyle={this.state.defaultLabelStyle}\n            // lengthAngle={360}\n            lineWidth={25}\n            paddingAngle={0}\n            radius={45}\n            viewBoxSize={[200, 200]}\n          />\n          }\n        </div>\n        <div className=\"right\">\n          <div id=\"currency-select\">\n            <label htmlFor=\"currencies\">Currency: </label>\n            <select\n              id=\"currencies\"\n              name=\"currencies\"\n              className=\"form-select form-select-sm\"\n              aria-label=\".form-select-sm example\"\n              onChange={this.convertCurrency}\n            >\n              {Object.entries(this.state.cur_codes).map(([key, value]) => (\n                <option value={key} key={key}>\n                  {key}\n                </option>\n              ))}\n            </select>\n          </div>\n          <br></br>\n          <br></br>\n          <h4>Assets</h4>\n          <table className=\"table\">\n            <tbody>\n              <tr>\n                <th>Cash and Investments</th>\n                <th></th>\n                <th></th>\n              </tr>\n              <tr>\n                <td>Chequing</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"chequing\"\n                        value={Math.round(this.state.values[\"chequing\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"chequing\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"chequing\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Savings for Taxes</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"savings_for_taxes\"\n                        value={Math.round(\n                          this.state.values[\"savings_for_taxes\"]\n                        )}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"savings_for_taxes\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"savings_for_taxes\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Rainy Day Fund</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"rainy_day_fund\"\n                        value={Math.round(this.state.values[\"rainy_day_fund\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"rainy_day_fund\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"rainy_day_fund\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Savings for Fun</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"savings_for_fun\"\n                        value={Math.round(this.state.values[\"savings_for_fun\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"savings_for_fun\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"savings_for_fun\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Savings for Travel</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"savings_for_travel\"\n                        value={Math.round(\n                          this.state.values[\"savings_for_travel\"]\n                        )}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"savings_for_travel\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"savings_for_travel\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Savings for Personal Development</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"savings_for_personal_development\"\n                        value={Math.round(\n                          this.state.values[\"savings_for_personal_development\"]\n                        )}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"savings_for_personal_development\"\n                        value={this.formatToCurrency(\n                          Math.round(\n                            this.state.values[\n                              \"savings_for_personal_development\"\n                            ]\n                          )\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Investment 1</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"investment_1\"\n                        value={Math.round(this.state.values[\"investment_1\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"investment_1\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"investment_1\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Investment 2</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"investment_2\"\n                        value={Math.round(this.state.values[\"investment_2\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"investment_2\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"investment_2\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Investment 3</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"investment_3\"\n                        value={Math.round(this.state.values[\"investment_3\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"investment_3\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"investment_3\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <th>Long Term Assets</th>\n                <th></th>\n                <th></th>\n              </tr>\n              <tr>\n                <td>Primary Home</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"primary_home\"\n                        value={Math.round(this.state.values[\"primary_home\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"primary_home\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"primary_home\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Second Home</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"second_home\"\n                        value={Math.round(this.state.values[\"second_home\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"second_home\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"second_home\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Other</td>\n                <td></td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"other\"\n                        value={Math.round(this.state.values[\"other\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"other\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"other\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <br></br>\n          <h4>Liabilities</h4>\n          <table className=\"table\">\n            <tbody>\n              <tr>\n                <th>Short Term Liabilities</th>\n                <th>Monthly Payment</th>\n                <th></th>\n              </tr>\n              <tr>\n                <td>Credit Card 1</td>\n                <td>\n                  {this.state.cur_codes[this.state.currency]}\n                  {this.formatToCurrency(\n                    Math.round(this.state.values[\"credit_card_1_mp\"])\n                  )}\n                </td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"credit_card_1\"\n                        value={Math.round(this.state.values[\"credit_card_1\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"credit_card_1\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"credit_card_1\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Credit Card 2</td>\n                <td>\n                  {this.state.cur_codes[this.state.currency]}\n                  {this.formatToCurrency(\n                    Math.round(this.state.values[\"credit_card_2_mp\"])\n                  )}\n                </td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"credit_card_2\"\n                        value={Math.round(this.state.values[\"credit_card_2\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"credit_card_2\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"credit_card_2\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <th>Long Term Debt</th>\n                <th></th>\n                <th></th>\n              </tr>\n              <tr>\n                <td>Mortgage 1</td>\n                <td>\n                  {this.state.cur_codes[this.state.currency]}\n                  {this.formatToCurrency(\n                    Math.round(this.state.values[\"mortgage_1_mp\"])\n                  )}\n                </td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"mortgage_1\"\n                        value={Math.round(this.state.values[\"mortgage_1\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"mortgage_1\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"mortgage_1\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Mortage 2</td>\n                <td>\n                  {this.state.cur_codes[this.state.currency]}\n                  {this.formatToCurrency(\n                    Math.round(this.state.values[\"mortgage_2_mp\"])\n                  )}\n                </td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"mortgage_2\"\n                        value={Math.round(this.state.values[\"mortgage_2\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"mortgage_2\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"mortgage_2\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Line of Credit</td>\n                <td>\n                  {this.state.cur_codes[this.state.currency]}\n                  {this.formatToCurrency(\n                    Math.round(this.state.values[\"line_of_credit_mp\"])\n                  )}\n                </td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"line_of_credit\"\n                        value={Math.round(this.state.values[\"line_of_credit\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"line_of_credit\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"line_of_credit\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>Investment Loan</td>\n                <td>\n                  {this.state.cur_codes[this.state.currency]}\n                  {this.formatToCurrency(\n                    Math.round(this.state.values[\"investment_loan_mp\"])\n                  )}\n                </td>\n                <td>\n                  <div className=\"input-group input-group-sm\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-sm\"\n                    >\n                      {this.state.cur_codes[this.state.currency]}\n                    </span>\n                    {this.state.isEditing ? (\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"investment_loan\"\n                        value={Math.round(this.state.values[\"investment_loan\"])}\n                        onChange={this.updateInputValue}\n                        onBlur={this.toggleEditing.bind(this)}\n                      ></input>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"investment_loan\"\n                        value={this.formatToCurrency(\n                          Math.round(this.state.values[\"investment_loan\"])\n                        )}\n                        onFocus={this.toggleEditing.bind(this)}\n                        readOnly\n                      ></input>\n                    )}\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}