{"ast":null,"code":"var _jsxFileName = \"/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Title from \"./components/Title\";\nimport Networth from \"./components/Networth\";\nimport Currencyselect from \"./components/Currencyselect\";\nimport Assets from \"./components/Assets\";\nimport Liabilities from \"./components/Liabilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [titles, setTitles] = useState([{\n    id: \"net\",\n    text: \"Net \",\n    class_name: \"display-1\"\n  }, {\n    id: \"worth\",\n    text: \"Worth \",\n    class_name: \"display-2\"\n  }, {\n    id: \"calc\",\n    text: \"Calculator\",\n    class_name: \"display-3\"\n  }]);\n  const [networths, setNetworths] = useState({\n    total_assets: {\n      id: \"total_assets\",\n      value: 2122427.0,\n      class: \"blue\",\n      text: \"Total Assets:\"\n    },\n    total_liabilities: {\n      id: \"total_liabilities\",\n      value: 908297.0,\n      class: \"orange\",\n      text: \"Total Liabilities:\"\n    },\n    net_worth: {\n      id: \"net_worth\",\n      value: 1214130.0,\n      class: \"\",\n      text: \"Net Worth:\"\n    }\n  });\n  const [currencyCodes, setCurrencyCodes] = useState([{\n    CAD: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this),\n    USD: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this),\n    NGN: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20A6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this),\n    EUR: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this),\n    INR: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20B9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this),\n    GBP: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\xA3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this),\n    KRW: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20A8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this),\n    PHP: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20B1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this),\n    AED: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u062F.\\u0625\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this),\n    JPY: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\xA5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this)\n  }]);\n  const [isEditing, setIsEditing] = useState([{\n    isEditing: false\n  }]);\n  const [currency, setCurrency] = useState({\n    currency: \"CAD\",\n    prev_currency: \"CAD\"\n  });\n  const [values, setValues] = useState({\n    cash_investments: {\n      chequing: {\n        name: \"cash_investments\",\n        id: \"chequing\",\n        value: 2000,\n        text: \"Chequing\"\n      },\n      savings_for_taxes: {\n        name: \"cash_investments\",\n        id: \"savings_for_taxes\",\n        value: 4000,\n        text: \"Savings for Taxes\"\n      },\n      rainy_day_fund: {\n        name: \"cash_investments\",\n        id: \"rainy_day_fund\",\n        value: 506,\n        text: \"Rainy Day Fund\"\n      },\n      savings_for_fun: {\n        name: \"cash_investments\",\n        id: \"savings_for_fun\",\n        value: 5000,\n        text: \"Savings for Fun\"\n      },\n      savings_for_travel: {\n        name: \"cash_investments\",\n        id: \"savings_for_travel\",\n        value: 400,\n        text: \"Savings for Travel\"\n      },\n      savings_for_personal_development: {\n        name: \"cash_investments\",\n        id: \"savings_for_personal_development\",\n        value: 200,\n        text: \"Savings for Personal Development\"\n      },\n      investment_1: {\n        name: \"cash_investments\",\n        id: \"investment_1\",\n        value: 5000,\n        text: \"Investment 1\"\n      },\n      investment_2: {\n        name: \"cash_investments\",\n        id: \"investment_2\",\n        value: 60000,\n        text: \"Investment 2\"\n      },\n      investment_3: {\n        name: \"cash_investments\",\n        id: \"investment_3\",\n        value: 24000,\n        text: \"Investment 3\"\n      }\n    },\n    long_term_assets: {\n      primary_home: {\n        name: \"long_term_assets\",\n        id: \"primary_home\",\n        value: 455000,\n        text: \"Primary Home\"\n      },\n      second_home: {\n        name: \"long_term_assets\",\n        id: \"second_home\",\n        value: 1564321.0,\n        text: \"Second Home\"\n      },\n      other: {\n        name: \"long_term_assets\",\n        id: \"other\",\n        value: 2000.0,\n        text: \"Other\"\n      }\n    },\n    short_term: {\n      credit_card_1: {\n        name: \"short_term\",\n        id: \"credit_card_1\",\n        value: 4342,\n        text: \"Credit Card 1\"\n      },\n      credit_card_2: {\n        name: \"short_term\",\n        id: \"credit_card_2\",\n        value: 322.0,\n        text: \"Credit Card 2\"\n      }\n    },\n    long_term_debt: {\n      mortgage_1: {\n        name: \"long_term_debt\",\n        id: \"mortgage_1\",\n        value: 250999,\n        text: \"Mortgage 1\"\n      },\n      mortgage_2: {\n        name: \"long_term_debt\",\n        id: \"mortgage_2\",\n        value: 632634.0,\n        text: \"Mortgage 2\"\n      },\n      line_of_credit: {\n        name: \"long_term_debt\",\n        id: \"line_of_credit\",\n        value: 10000.0,\n        text: \"Line of Credit\"\n      },\n      investment_loan: {\n        name: \"long_term_debt\",\n        id: \"investment_loan\",\n        value: 10000.0,\n        text: \"Investment Loan\"\n      }\n    }\n  });\n\n  const updateInputValue = async e => {\n    // gets called when an amount is edited and calls the server to get the updated totals\n    console.log(e.target.value, e.target.name, e.target.id);\n    let updated_values = values;\n    updated_values[e.target.id][e.target.name] = e.target.value === \"\" ? 0 : e.target.value;\n    await setValues(updated_values); // await this.setState({ values: values });\n    // fetch(\"/calculator/\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     Accept: \"application/json\",\n    //     \"Content-Type\": \"application/json\"\n    //   },\n    //   body: JSON.stringify({\n    //     cashInvestments: values.cash_investments,\n    //     longTermAssets: values.long_term_assets,\n    //     shortTerm: values.short_term,\n    //     longTermDebt: values.long_term_debt,\n    //     fromCurrency: fromCurrency,\n    //     toCurrency: toCurrency,\n    //     totalAssets: networths.total_assets,\n    //     totalLiabilities: networths.total_liabilities,\n    //     networth: networths.net_worth\n    // })\n    //   .then(res => {\n    //     if (res.ok) {\n    //       return res.json();\n    //     }\n    //   })\n    //   .then(data => {\n    //     this.setState({\n    //       total_assets: data.total_assets,\n    //       total_liabilities: data.total_liabilities,\n    //       net_worth: data.net_worth\n    //     });\n    //   });\n  };\n\n  const convertCurrency = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    var fromCurrency = encodeURIComponent(currency[\"prev_currency\"]);\n    var toCurrency = encodeURIComponent(e.target.value);\n    fetch(\"/convert-cur/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        cashInvestments: values.cash_investments,\n        longTermAssets: values.long_term_assets,\n        shortTerm: values.short_term,\n        longTermDebt: values.long_term_debt,\n        fromCurrency: fromCurrency,\n        toCurrency: toCurrency,\n        totalAssets: networths.total_assets,\n        totalLiabilities: networths.total_liabilities,\n        networth: networths.net_worth\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      console.log(data);\n      setValues({\n        cash_investments: data.cash_investments,\n        long_term_assets: data.long_term_assets,\n        short_term: data.short_term,\n        long_term_debt: data.long_term_debt\n      });\n      setCurrency({\n        currency: toCurrency,\n        prev_currency: toCurrency\n      });\n      setNetworths({\n        total_assets: data.total_assets,\n        total_liabilities: data.total_liabilities,\n        net_worth: data.net_worth\n      });\n    });\n  }; // format currency\n\n\n  const formatToCurrency = number => {\n    // changes the format of the amount to currency format\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const toggleEditing = () => {\n    // changes the format of the amount to currency format\n    setIsEditing([{\n      isEditing: !isEditing[0].isEditing\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        titles: titles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Networth, {\n        networths: networths,\n        formatToCurrency: formatToCurrency,\n        currency: currency,\n        currency_codes: currencyCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Currencyselect, {\n        currencies: currencyCodes,\n        convertCurrency: convertCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Assets, {\n        cash_investments: values.cash_investments,\n        long_term_assets: values.long_term_assets,\n        is_editing: isEditing,\n        formatToCurrency: formatToCurrency,\n        toggleEditing: toggleEditing,\n        currency: currency,\n        currency_codes: currencyCodes,\n        updateInputValue: updateInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Liabilities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Liabilities, {\n        short_term: values.short_term,\n        long_term_debt: values.long_term_debt,\n        is_editing: isEditing,\n        formatToCurrency: formatToCurrency,\n        toggleEditing: toggleEditing,\n        currency: currency,\n        currency_codes: currencyCodes,\n        updateInputValue: updateInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wA5LWkKtCgfaE7GnF8meELAT3qE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/App.js"],"names":["useState","Title","Networth","Currencyselect","Assets","Liabilities","App","titles","setTitles","id","text","class_name","networths","setNetworths","total_assets","value","class","total_liabilities","net_worth","currencyCodes","setCurrencyCodes","CAD","USD","NGN","EUR","INR","GBP","KRW","PHP","AED","JPY","isEditing","setIsEditing","currency","setCurrency","prev_currency","values","setValues","cash_investments","chequing","name","savings_for_taxes","rainy_day_fund","savings_for_fun","savings_for_travel","savings_for_personal_development","investment_1","investment_2","investment_3","long_term_assets","primary_home","second_home","other","short_term","credit_card_1","credit_card_2","long_term_debt","mortgage_1","mortgage_2","line_of_credit","investment_loan","updateInputValue","e","console","log","target","updated_values","convertCurrency","fromCurrency","encodeURIComponent","toCurrency","fetch","method","headers","Accept","body","JSON","stringify","cashInvestments","longTermAssets","shortTerm","longTermDebt","totalAssets","totalLiabilities","networth","then","res","ok","json","data","formatToCurrency","number","toString","replace","toggleEditing"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Title from \"./components/Title\";\nimport Networth from \"./components/Networth\";\nimport Currencyselect from \"./components/Currencyselect\";\nimport Assets from \"./components/Assets\";\nimport Liabilities from \"./components/Liabilities\";\n\nfunction App() {\n  const [titles, setTitles] = useState([\n    { id: \"net\", text: \"Net \", class_name: \"display-1\" },\n    { id: \"worth\", text: \"Worth \", class_name: \"display-2\" },\n    { id: \"calc\", text: \"Calculator\", class_name: \"display-3\" }\n  ]);\n  const [networths, setNetworths] = useState({\n    total_assets: {\n      id: \"total_assets\",\n      value: 2122427.0,\n      class: \"blue\",\n      text: \"Total Assets:\"\n    },\n    total_liabilities: {\n      id: \"total_liabilities\",\n      value: 908297.0,\n      class: \"orange\",\n      text: \"Total Liabilities:\"\n    },\n    net_worth: {\n      id: \"net_worth\",\n      value: 1214130.0,\n      class: \"\",\n      text: \"Net Worth:\"\n    }\n  });\n  const [currencyCodes, setCurrencyCodes] = useState([\n    {\n      CAD: <span>&#36;</span>,\n      USD: <span>&#36;</span>,\n      NGN: <span>&#8358;</span>,\n      EUR: <span>&euro;</span>,\n      INR: <span>&#8377;</span>,\n      GBP: <span>&pound;</span>,\n      KRW: <span>&#8360;</span>,\n      PHP: <span>&#8369;</span>,\n      AED: <span>&#x62f;&#x2e;&#x625;</span>,\n      JPY: <span>&#165;</span>\n    }\n  ]);\n  const [isEditing, setIsEditing] = useState([{ isEditing: false }]);\n  const [currency, setCurrency] = useState({\n    currency: \"CAD\",\n    prev_currency: \"CAD\"\n  });\n  const [values, setValues] = useState({\n    cash_investments: {\n      chequing: {\n        name: \"cash_investments\",\n        id: \"chequing\",\n        value: 2000,\n        text: \"Chequing\"\n      },\n      savings_for_taxes: {\n        name: \"cash_investments\",\n        id: \"savings_for_taxes\",\n        value: 4000,\n        text: \"Savings for Taxes\"\n      },\n      rainy_day_fund: {\n        name: \"cash_investments\",\n        id: \"rainy_day_fund\",\n        value: 506,\n        text: \"Rainy Day Fund\"\n      },\n      savings_for_fun: {\n        name: \"cash_investments\",\n        id: \"savings_for_fun\",\n        value: 5000,\n        text: \"Savings for Fun\"\n      },\n      savings_for_travel: {\n        name: \"cash_investments\",\n        id: \"savings_for_travel\",\n        value: 400,\n        text: \"Savings for Travel\"\n      },\n      savings_for_personal_development: {\n        name: \"cash_investments\",\n        id: \"savings_for_personal_development\",\n        value: 200,\n        text: \"Savings for Personal Development\"\n      },\n      investment_1: {\n        name: \"cash_investments\",\n        id: \"investment_1\",\n        value: 5000,\n        text: \"Investment 1\"\n      },\n      investment_2: {\n        name: \"cash_investments\",\n        id: \"investment_2\",\n        value: 60000,\n        text: \"Investment 2\"\n      },\n      investment_3: {\n        name: \"cash_investments\",\n        id: \"investment_3\",\n        value: 24000,\n        text: \"Investment 3\"\n      }\n    },\n    long_term_assets: {\n      primary_home: {\n        name: \"long_term_assets\",\n        id: \"primary_home\",\n        value: 455000,\n        text: \"Primary Home\"\n      },\n      second_home: {\n        name: \"long_term_assets\",\n        id: \"second_home\",\n        value: 1564321.0,\n        text: \"Second Home\"\n      },\n      other: {\n        name: \"long_term_assets\",\n        id: \"other\",\n        value: 2000.0,\n        text: \"Other\"\n      }\n    },\n    short_term: {\n      credit_card_1: {\n        name: \"short_term\",\n        id: \"credit_card_1\",\n        value: 4342,\n        text: \"Credit Card 1\"\n      },\n      credit_card_2: {\n        name: \"short_term\",\n        id: \"credit_card_2\",\n        value: 322.0,\n        text: \"Credit Card 2\"\n      }\n    },\n    long_term_debt: {\n      mortgage_1: {\n        name: \"long_term_debt\",\n        id: \"mortgage_1\",\n        value: 250999,\n        text: \"Mortgage 1\"\n      },\n      mortgage_2: {\n        name: \"long_term_debt\",\n        id: \"mortgage_2\",\n        value: 632634.0,\n        text: \"Mortgage 2\"\n      },\n      line_of_credit: {\n        name: \"long_term_debt\",\n        id: \"line_of_credit\",\n        value: 10000.0,\n        text: \"Line of Credit\"\n      },\n      investment_loan: {\n        name: \"long_term_debt\",\n        id: \"investment_loan\",\n        value: 10000.0,\n        text: \"Investment Loan\"\n      }\n    }\n  });\n  const updateInputValue = async e => {\n    // gets called when an amount is edited and calls the server to get the updated totals\n    console.log(e.target.value, e.target.name, e.target.id);\n    let updated_values = values;\n    updated_values[e.target.id][e.target.name] =\n      e.target.value === \"\" ? 0 : e.target.value;\n    await setValues(updated_values);\n    // await this.setState({ values: values });\n    // fetch(\"/calculator/\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     Accept: \"application/json\",\n    //     \"Content-Type\": \"application/json\"\n    //   },\n    //   body: JSON.stringify({\n    //     cashInvestments: values.cash_investments,\n    //     longTermAssets: values.long_term_assets,\n    //     shortTerm: values.short_term,\n    //     longTermDebt: values.long_term_debt,\n    //     fromCurrency: fromCurrency,\n    //     toCurrency: toCurrency,\n    //     totalAssets: networths.total_assets,\n    //     totalLiabilities: networths.total_liabilities,\n    //     networth: networths.net_worth\n    // })\n    //   .then(res => {\n    //     if (res.ok) {\n    //       return res.json();\n    //     }\n    //   })\n    //   .then(data => {\n    //     this.setState({\n    //       total_assets: data.total_assets,\n    //       total_liabilities: data.total_liabilities,\n    //       net_worth: data.net_worth\n    //     });\n    //   });\n  };\n\n  const convertCurrency = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    var fromCurrency = encodeURIComponent(currency[\"prev_currency\"]);\n    var toCurrency = encodeURIComponent(e.target.value);\n    fetch(\"/convert-cur/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        cashInvestments: values.cash_investments,\n        longTermAssets: values.long_term_assets,\n        shortTerm: values.short_term,\n        longTermDebt: values.long_term_debt,\n        fromCurrency: fromCurrency,\n        toCurrency: toCurrency,\n        totalAssets: networths.total_assets,\n        totalLiabilities: networths.total_liabilities,\n        networth: networths.net_worth\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        console.log(data);\n        setValues({\n          cash_investments: data.cash_investments,\n          long_term_assets: data.long_term_assets,\n          short_term: data.short_term,\n          long_term_debt: data.long_term_debt\n        });\n        setCurrency({\n          currency: toCurrency,\n          prev_currency: toCurrency\n        });\n        setNetworths({\n          total_assets: data.total_assets,\n          total_liabilities: data.total_liabilities,\n          net_worth: data.net_worth\n        });\n      });\n  };\n\n  // format currency\n  const formatToCurrency = number => {\n    // changes the format of the amount to currency format\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const toggleEditing = () => {\n    // changes the format of the amount to currency format\n    setIsEditing([{ isEditing: !isEditing[0].isEditing }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"left\">\n        <Title titles={titles} />\n        <Networth\n          networths={networths}\n          formatToCurrency={formatToCurrency}\n          currency={currency}\n          currency_codes={currencyCodes}\n        />\n      </div>\n      <div className=\"right\">\n        <Currencyselect\n          currencies={currencyCodes}\n          convertCurrency={convertCurrency}\n        />\n        <br></br>\n        <br></br>\n        <h4>Assets</h4>\n        <Assets\n          cash_investments={values.cash_investments}\n          long_term_assets={values.long_term_assets}\n          is_editing={isEditing}\n          formatToCurrency={formatToCurrency}\n          toggleEditing={toggleEditing}\n          currency={currency}\n          currency_codes={currencyCodes}\n          updateInputValue={updateInputValue}\n        />\n        <br></br>\n        <h4>Liabilities</h4>\n        <Liabilities\n          short_term={values.short_term}\n          long_term_debt={values.long_term_debt}\n          is_editing={isEditing}\n          formatToCurrency={formatToCurrency}\n          toggleEditing={toggleEditing}\n          currency={currency}\n          currency_codes={currencyCodes}\n          updateInputValue={updateInputValue}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}