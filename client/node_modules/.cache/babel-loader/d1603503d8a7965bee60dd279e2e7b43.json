{"ast":null,"code":"var _jsxFileName = \"/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Title from \"./components/Title\";\nimport Networth from \"./components/Networth\";\nimport Currencyselect from \"./components/Currencyselect\";\nimport Assets from \"./components/Assets\";\nimport Liabilities from \"./components/Liabilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [titles, setTitles] = useState([{\n    id: \"net\",\n    text: \"Net \",\n    class_name: \"display-1\"\n  }, {\n    id: \"worth\",\n    text: \"Worth \",\n    class_name: \"display-2\"\n  }, {\n    id: \"calc\",\n    text: \"Calculator\",\n    class_name: \"display-3\"\n  }]);\n  const [networths, setNetworths] = useState([{\n    id: \"total_assets\",\n    value: 2122427.0,\n    class: \"blue\",\n    text: \"Total Assets:\"\n  }, {\n    id: \"total_liabilities\",\n    value: 908297.0,\n    class: \"orange\",\n    text: \"Total Liabilities:\"\n  }, {\n    id: \"net_worth\",\n    value: 1214130.0,\n    class: \"\",\n    text: \"Net Worth:\"\n  }]);\n  const [currencyCodes, setCurrencyCodes] = useState([{\n    CAD: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this),\n    USD: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this),\n    NGN: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20A6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this),\n    EUR: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this),\n    INR: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20B9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this),\n    GBP: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\xA3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this),\n    KRW: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20A8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this),\n    PHP: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20B1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this),\n    AED: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u062F.\\u0625\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this),\n    JPY: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\xA5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this)\n  }]);\n  const [cashInvestments, setCashInvestments] = useState([{\n    id: \"chequing\",\n    value: 2000,\n    text: \"Chequing\"\n  }, {\n    id: \"savings_for_taxes\",\n    value: 4000.0,\n    text: \"Savings for Taxes\"\n  }, {\n    id: \"rainy_day_fund\",\n    value: 506.0,\n    text: \"Rainy Day Fund\"\n  }, {\n    id: \"savings_for_fun\",\n    value: 5000.0,\n    text: \"Savings for Fun\"\n  }, {\n    id: \"savings_for_travel\",\n    value: 400.0,\n    text: \"Savings for Travel\"\n  }, {\n    id: \"savings_for_personal_development\",\n    value: 200.0,\n    text: \"Savings for Personal Development\"\n  }, {\n    id: \"investment_1\",\n    value: 5000.0,\n    text: \"Investment 1\"\n  }, {\n    id: \"investment_2\",\n    value: 60000.0,\n    text: \"Investment 2\"\n  }, {\n    id: \"investment_3\",\n    value: 24000.0,\n    text: \"Investment 3\"\n  }]);\n  const [longTermAssets, setLongTermAssets] = useState([{\n    id: \"primary_home\",\n    value: 455000,\n    text: \"Primary Home\"\n  }, {\n    id: \"second_home\",\n    value: 1564321.0,\n    text: \"Second Home\"\n  }, {\n    id: \"other\",\n    value: 2000.0,\n    text: \"Other\"\n  }]);\n  const [shortTerm, setShortTerm] = useState([{\n    id: \"credit_card_1\",\n    value: 4342,\n    text: \"Credit Card 1\"\n  }, {\n    id: \"credit_card_2\",\n    value: 322.0,\n    text: \"Credit Card 2\"\n  }]);\n  const [longTermDebt, setLongTermDebt] = useState([{\n    id: \"mortgage_1\",\n    value: 250999,\n    text: \"Mortgage 1\"\n  }, {\n    id: \"mortgage_2\",\n    value: 632634.0,\n    text: \"Mortgage 2\"\n  }, {\n    id: \"line_of_credit\",\n    value: 10000.0,\n    text: \"Line of Credit\"\n  }, {\n    id: \"investment_loan\",\n    value: 10000.0,\n    text: \"Investment Loan\"\n  }]);\n  const [isEditing, setIsEditing] = useState([{\n    isEditing: false\n  }]);\n  const [currency, setCurrency] = useState([{\n    currency: \"CAD\"\n  }, {\n    prev_currency: \"CAD\"\n  }]);\n  const [values, setVaules] = useState({\n    cash_investments: [{\n      id: \"mortgage_1\",\n      value: 250999,\n      text: \"Mortgage 1\"\n    }, {\n      id: \"mortgage_2\",\n      value: 632634.0,\n      text: \"Mortgage 2\"\n    }, {\n      id: \"line_of_credit\",\n      value: 10000.0,\n      text: \"Line of Credit\"\n    }, {\n      id: \"investment_loan\",\n      value: 10000.0,\n      text: \"Investment Loan\"\n    }]\n  });\n  state = {\n    currency: \"CAD\",\n    prev_currency: \"CAD\",\n    defaultLabelStyle: {\n      fontSize: \"2px\",\n      fontFamily: \"sans-serif\",\n      fill: \"white\"\n    },\n    isEditing: false,\n    cur_codes: {\n      CAD: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 12\n      }, this),\n      USD: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 12\n      }, this),\n      NGN: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u20A6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 12\n      }, this),\n      EUR: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u20AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 12\n      }, this),\n      INR: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u20B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 12\n      }, this),\n      GBP: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 12\n      }, this),\n      KRW: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u20A8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 12\n      }, this),\n      PHP: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u20B1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 12\n      }, this),\n      AED: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u062F.\\u0625\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 12\n      }, this),\n      JPY: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 12\n      }, this)\n    },\n    values: {\n      chequing: 2000,\n      savings_for_taxes: 4000.0,\n      rainy_day_fund: 506.0,\n      savings_for_fun: 5000.0,\n      savings_for_travel: 400.0,\n      savings_for_personal_development: 200.0,\n      investment_1: 5000.0,\n      investment_2: 60000.0,\n      investment_3: 24000.0,\n      primary_home: 455000.0,\n      second_home: 1564321.0,\n      other: 2000.0,\n      credit_card_1: 4342.0,\n      credit_card_2: 322.0,\n      mortgage_1: 250999.0,\n      mortgage_2: 632634.0,\n      line_of_credit: 10000.0,\n      investment_loan: 10000.0\n    },\n    total_assets: 2122427.0,\n    total_liabilities: 908297.0,\n    net_worth: 1214130.0\n  };\n\n  const updateInputValue = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    let values = this.state.values;\n    values[e.target.name] = e.target.value === \"\" ? 0 : e.target.value;\n    await this.setState({\n      values: values\n    });\n    fetch(\"/calculator/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      this.setState({\n        total_assets: data.total_assets,\n        total_liabilities: data.total_liabilities,\n        net_worth: data.net_worth\n      });\n    });\n  };\n\n  const convertCurrency = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    var fromCurrency = encodeURIComponent(currency[1][\"prev_currency\"]);\n    var toCurrency = encodeURIComponent(e.target.value);\n    console.log({\n      state\n    });\n    fetch(\"/convert-cur/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        cashInvestments: cashInvestments,\n        longTermAssets: longTermAssets,\n        shortTerm: shortTerm,\n        longTermDebt: longTermDebt,\n        fromCurrency: fromCurrency,\n        toCurrency: toCurrency,\n        networths: networths\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      // this.setState({\n      //   values: data.updated_values,\n      //   currency: toCurrency,\n      //   prev_currency: toCurrency,\n      //   total_assets: data.newTotalAssets,\n      //   total_liabilities: data.newTotalLiabilities,\n      //   net_worth: data.newNetWorth\n      // });\n      console.log(data);\n    });\n  }; // format currency\n\n\n  const formatToCurrency = number => {\n    // changes the format of the amount to currency format\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const toggleEditing = () => {\n    // changes the format of the amount to currency format\n    setIsEditing([{\n      isEditing: !isEditing[0].isEditing\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        titles: titles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Networth, {\n        networths: networths,\n        formatToCurrency: formatToCurrency,\n        currency: currency,\n        currency_codes: currencyCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Currencyselect, {\n        currencies: currencyCodes,\n        convertCurrency: convertCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Assets, {\n        cash_investments: cashInvestments,\n        long_term_assets: longTermAssets,\n        is_editing: isEditing,\n        formatToCurrency: formatToCurrency,\n        toggleEditing: toggleEditing,\n        currency: currency,\n        currency_codes: currencyCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Liabilities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Liabilities, {\n        short_term: shortTerm,\n        long_term_debt: longTermDebt,\n        is_editing: isEditing,\n        formatToCurrency: formatToCurrency,\n        toggleEditing: toggleEditing,\n        currency: currency,\n        currency_codes: currencyCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mCdoYSb21W9ehwrE0eGyHqwmB1Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/App.js"],"names":["useState","Title","Networth","Currencyselect","Assets","Liabilities","App","titles","setTitles","id","text","class_name","networths","setNetworths","value","class","currencyCodes","setCurrencyCodes","CAD","USD","NGN","EUR","INR","GBP","KRW","PHP","AED","JPY","cashInvestments","setCashInvestments","longTermAssets","setLongTermAssets","shortTerm","setShortTerm","longTermDebt","setLongTermDebt","isEditing","setIsEditing","currency","setCurrency","prev_currency","values","setVaules","cash_investments","state","defaultLabelStyle","fontSize","fontFamily","fill","cur_codes","chequing","savings_for_taxes","rainy_day_fund","savings_for_fun","savings_for_travel","savings_for_personal_development","investment_1","investment_2","investment_3","primary_home","second_home","other","credit_card_1","credit_card_2","mortgage_1","mortgage_2","line_of_credit","investment_loan","total_assets","total_liabilities","net_worth","updateInputValue","e","target","name","setState","fetch","method","headers","Accept","body","JSON","stringify","then","res","ok","json","data","convertCurrency","fromCurrency","encodeURIComponent","toCurrency","console","log","formatToCurrency","number","toString","replace","toggleEditing"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Title from \"./components/Title\";\nimport Networth from \"./components/Networth\";\nimport Currencyselect from \"./components/Currencyselect\";\nimport Assets from \"./components/Assets\";\nimport Liabilities from \"./components/Liabilities\";\n\nfunction App() {\n  const [titles, setTitles] = useState([\n    { id: \"net\", text: \"Net \", class_name: \"display-1\" },\n    { id: \"worth\", text: \"Worth \", class_name: \"display-2\" },\n    { id: \"calc\", text: \"Calculator\", class_name: \"display-3\" }\n  ]);\n  const [networths, setNetworths] = useState([\n    {\n      id: \"total_assets\",\n      value: 2122427.0,\n      class: \"blue\",\n      text: \"Total Assets:\"\n    },\n    {\n      id: \"total_liabilities\",\n      value: 908297.0,\n      class: \"orange\",\n      text: \"Total Liabilities:\"\n    },\n    { id: \"net_worth\", value: 1214130.0, class: \"\", text: \"Net Worth:\" }\n  ]);\n  const [currencyCodes, setCurrencyCodes] = useState([\n    {\n      CAD: <span>&#36;</span>,\n      USD: <span>&#36;</span>,\n      NGN: <span>&#8358;</span>,\n      EUR: <span>&euro;</span>,\n      INR: <span>&#8377;</span>,\n      GBP: <span>&pound;</span>,\n      KRW: <span>&#8360;</span>,\n      PHP: <span>&#8369;</span>,\n      AED: <span>&#x62f;&#x2e;&#x625;</span>,\n      JPY: <span>&#165;</span>\n    }\n  ]);\n  const [cashInvestments, setCashInvestments] = useState([\n    {\n      id: \"chequing\",\n      value: 2000,\n      text: \"Chequing\"\n    },\n    {\n      id: \"savings_for_taxes\",\n      value: 4000.0,\n      text: \"Savings for Taxes\"\n    },\n    {\n      id: \"rainy_day_fund\",\n      value: 506.0,\n      text: \"Rainy Day Fund\"\n    },\n    {\n      id: \"savings_for_fun\",\n      value: 5000.0,\n      text: \"Savings for Fun\"\n    },\n    {\n      id: \"savings_for_travel\",\n      value: 400.0,\n      text: \"Savings for Travel\"\n    },\n    {\n      id: \"savings_for_personal_development\",\n      value: 200.0,\n      text: \"Savings for Personal Development\"\n    },\n    {\n      id: \"investment_1\",\n      value: 5000.0,\n      text: \"Investment 1\"\n    },\n    {\n      id: \"investment_2\",\n      value: 60000.0,\n      text: \"Investment 2\"\n    },\n    {\n      id: \"investment_3\",\n      value: 24000.0,\n      text: \"Investment 3\"\n    }\n  ]);\n  const [longTermAssets, setLongTermAssets] = useState([\n    {\n      id: \"primary_home\",\n      value: 455000,\n      text: \"Primary Home\"\n    },\n    {\n      id: \"second_home\",\n      value: 1564321.0,\n      text: \"Second Home\"\n    },\n    {\n      id: \"other\",\n      value: 2000.0,\n      text: \"Other\"\n    }\n  ]);\n  const [shortTerm, setShortTerm] = useState([\n    {\n      id: \"credit_card_1\",\n      value: 4342,\n      text: \"Credit Card 1\"\n    },\n    {\n      id: \"credit_card_2\",\n      value: 322.0,\n      text: \"Credit Card 2\"\n    }\n  ]);\n  const [longTermDebt, setLongTermDebt] = useState([\n    {\n      id: \"mortgage_1\",\n      value: 250999,\n      text: \"Mortgage 1\"\n    },\n    {\n      id: \"mortgage_2\",\n      value: 632634.0,\n      text: \"Mortgage 2\"\n    },\n    {\n      id: \"line_of_credit\",\n      value: 10000.0,\n      text: \"Line of Credit\"\n    },\n    {\n      id: \"investment_loan\",\n      value: 10000.0,\n      text: \"Investment Loan\"\n    }\n  ]);\n  const [isEditing, setIsEditing] = useState([{ isEditing: false }]);\n  const [currency, setCurrency] = useState([\n    { currency: \"CAD\" },\n    { prev_currency: \"CAD\" }\n  ]);\n  const [values, setVaules] = useState({\n    cash_investments: [\n      {\n        id: \"mortgage_1\",\n        value: 250999,\n        text: \"Mortgage 1\"\n      },\n      {\n        id: \"mortgage_2\",\n        value: 632634.0,\n        text: \"Mortgage 2\"\n      },\n      {\n        id: \"line_of_credit\",\n        value: 10000.0,\n        text: \"Line of Credit\"\n      },\n      {\n        id: \"investment_loan\",\n        value: 10000.0,\n        text: \"Investment Loan\"\n      }\n    ]\n  });\n  state = {\n    currency: \"CAD\",\n    prev_currency: \"CAD\",\n    defaultLabelStyle: {\n      fontSize: \"2px\",\n      fontFamily: \"sans-serif\",\n      fill: \"white\"\n    },\n    isEditing: false,\n    cur_codes: {\n      CAD: <span>&#36;</span>,\n      USD: <span>&#36;</span>,\n      NGN: <span>&#8358;</span>,\n      EUR: <span>&euro;</span>,\n      INR: <span>&#8377;</span>,\n      GBP: <span>&pound;</span>,\n      KRW: <span>&#8360;</span>,\n      PHP: <span>&#8369;</span>,\n      AED: <span>&#x62f;&#x2e;&#x625;</span>,\n      JPY: <span>&#165;</span>\n    },\n    values: {\n      chequing: 2000,\n      savings_for_taxes: 4000.0,\n      rainy_day_fund: 506.0,\n      savings_for_fun: 5000.0,\n      savings_for_travel: 400.0,\n      savings_for_personal_development: 200.0,\n      investment_1: 5000.0,\n      investment_2: 60000.0,\n      investment_3: 24000.0,\n      primary_home: 455000.0,\n      second_home: 1564321.0,\n      other: 2000.0,\n      credit_card_1: 4342.0,\n      credit_card_2: 322.0,\n      mortgage_1: 250999.0,\n      mortgage_2: 632634.0,\n      line_of_credit: 10000.0,\n      investment_loan: 10000.0\n    },\n    total_assets: 2122427.0,\n    total_liabilities: 908297.0,\n    net_worth: 1214130.0\n  };\n  const updateInputValue = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    let values = this.state.values;\n    values[e.target.name] = e.target.value === \"\" ? 0 : e.target.value;\n    await this.setState({ values: values });\n    fetch(\"/calculator/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        this.setState({\n          total_assets: data.total_assets,\n          total_liabilities: data.total_liabilities,\n          net_worth: data.net_worth\n        });\n      });\n  };\n\n  const convertCurrency = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    var fromCurrency = encodeURIComponent(currency[1][\"prev_currency\"]);\n    var toCurrency = encodeURIComponent(e.target.value);\n    console.log({ state });\n    fetch(\"/convert-cur/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        cashInvestments: cashInvestments,\n        longTermAssets: longTermAssets,\n        shortTerm: shortTerm,\n        longTermDebt: longTermDebt,\n        fromCurrency: fromCurrency,\n        toCurrency: toCurrency,\n        networths: networths\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        // this.setState({\n        //   values: data.updated_values,\n        //   currency: toCurrency,\n        //   prev_currency: toCurrency,\n        //   total_assets: data.newTotalAssets,\n        //   total_liabilities: data.newTotalLiabilities,\n        //   net_worth: data.newNetWorth\n        // });\n        console.log(data);\n      });\n  };\n\n  // format currency\n  const formatToCurrency = number => {\n    // changes the format of the amount to currency format\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const toggleEditing = () => {\n    // changes the format of the amount to currency format\n    setIsEditing([{ isEditing: !isEditing[0].isEditing }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"left\">\n        <Title titles={titles} />\n        <Networth\n          networths={networths}\n          formatToCurrency={formatToCurrency}\n          currency={currency}\n          currency_codes={currencyCodes}\n        />\n      </div>\n      <div className=\"right\">\n        <Currencyselect\n          currencies={currencyCodes}\n          convertCurrency={convertCurrency}\n        />\n        <br></br>\n        <br></br>\n        <h4>Assets</h4>\n        <Assets\n          cash_investments={cashInvestments}\n          long_term_assets={longTermAssets}\n          is_editing={isEditing}\n          formatToCurrency={formatToCurrency}\n          toggleEditing={toggleEditing}\n          currency={currency}\n          currency_codes={currencyCodes}\n        />\n        <br></br>\n        <h4>Liabilities</h4>\n        <Liabilities\n          short_term={shortTerm}\n          long_term_debt={longTermDebt}\n          is_editing={isEditing}\n          formatToCurrency={formatToCurrency}\n          toggleEditing={toggleEditing}\n          currency={currency}\n          currency_codes={currencyCodes}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}