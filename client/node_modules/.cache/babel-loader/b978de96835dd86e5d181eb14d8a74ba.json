{"ast":null,"code":"var _jsxFileName = \"/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/components/Liability.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Liability = _ref => {\n  let {\n    liability,\n    is_editing,\n    formatToCurrency,\n    toggleEditing,\n    currency,\n    currency_codes\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: liability.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group input-group-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          id: \"inputGroup-sizing-sm\",\n          children: currency_codes[0][currency[\"currency\"]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), is_editing[0].isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          name: liability.id,\n          id: liability.name,\n          value: Math.round(liability.value) // onChange={this.updateInputValue}\n          ,\n          onBlur: toggleEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: liability.id,\n          id: liability.name,\n          value: formatToCurrency(Math.round(liability.value)),\n          onFocus: toggleEditing,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Liability;\nexport default Liability;\n\nvar _c;\n\n$RefreshReg$(_c, \"Liability\");","map":{"version":3,"sources":["/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/components/Liability.js"],"names":["Liability","liability","is_editing","formatToCurrency","toggleEditing","currency","currency_codes","text","isEditing","id","name","Math","round","value"],"mappings":";;;AAAA,MAAMA,SAAS,GAAG,QAOZ;AAAA,MAPa;AACjBC,IAAAA,SADiB;AAEjBC,IAAAA,UAFiB;AAGjBC,IAAAA,gBAHiB;AAIjBC,IAAAA,aAJiB;AAKjBC,IAAAA,QALiB;AAMjBC,IAAAA;AANiB,GAOb;AACJ,sBACE;AAAA,4BACE;AAAA,gBAAKL,SAAS,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAmC,UAAA,EAAE,EAAC,sBAAtC;AAAA,oBACGD,cAAc,CAAC,CAAD,CAAd,CAAkBD,QAAQ,CAAC,UAAD,CAA1B;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGH,UAAU,CAAC,CAAD,CAAV,CAAcM,SAAd,gBACC;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,IAAI,EAAEP,SAAS,CAACQ,EAHlB;AAIE,UAAA,EAAE,EAAER,SAAS,CAACS,IAJhB;AAKE,UAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWX,SAAS,CAACY,KAArB,CALT,CAME;AANF;AAOE,UAAA,MAAM,EAAET;AAPV;AAAA;AAAA;AAAA;AAAA,gBADD,gBAWC;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,IAAI,EAAEH,SAAS,CAACQ,EAHlB;AAIE,UAAA,EAAE,EAAER,SAAS,CAACS,IAJhB;AAKE,UAAA,KAAK,EAAEP,gBAAgB,CAACQ,IAAI,CAACC,KAAL,CAAWX,SAAS,CAACY,KAArB,CAAD,CALzB;AAME,UAAA,OAAO,EAAET,aANX;AAOE,UAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA1CD;;KAAMJ,S;AA4CN,eAAeA,SAAf","sourcesContent":["const Liability = ({\n  liability,\n  is_editing,\n  formatToCurrency,\n  toggleEditing,\n  currency,\n  currency_codes\n}) => {\n  return (\n    <tr>\n      <td>{liability.text}</td>\n      <td></td>\n      <td>\n        <div className=\"input-group input-group-sm\">\n          <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n            {currency_codes[0][currency[\"currency\"]]}\n          </span>\n          {is_editing[0].isEditing ? (\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              name={liability.id}\n              id={liability.name}\n              value={Math.round(liability.value)}\n              // onChange={this.updateInputValue}\n              onBlur={toggleEditing}\n            ></input>\n          ) : (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name={liability.id}\n              id={liability.name}\n              value={formatToCurrency(Math.round(liability.value))}\n              onFocus={toggleEditing}\n              readOnly\n            ></input>\n          )}\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport default Liability;\n"]},"metadata":{},"sourceType":"module"}