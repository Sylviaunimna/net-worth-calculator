{"ast":null,"code":"var _jsxFileName = \"/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Title from \"./components/Title\";\nimport Networth from \"./components/Networth\";\nimport Currencyselect from \"./components/Currencyselect\";\nimport Assets from \"./components/Assets\";\nimport Liabilities from \"./components/Liabilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [titles, setTitles] = useState([{\n    id: \"net\",\n    text: \"Net \",\n    class_name: \"display-1\"\n  }, {\n    id: \"worth\",\n    text: \"Worth \",\n    class_name: \"display-2\"\n  }, {\n    id: \"calc\",\n    text: \"Calculator\",\n    class_name: \"display-3\"\n  }]);\n  const [networths, setNetworths] = useState({\n    total_assets: {\n      id: \"total_assets\",\n      value: 2122427.0,\n      class: \"blue\",\n      text: \"Total Assets:\"\n    },\n    total_liabilities: {\n      id: \"total_liabilities\",\n      value: 908297.0,\n      class: \"orange\",\n      text: \"Total Liabilities:\"\n    },\n    net_worth: {\n      id: \"net_worth\",\n      value: 1214130.0,\n      class: \"\",\n      text: \"Net Worth:\"\n    }\n  });\n  const [currencyCodes, setCurrencyCodes] = useState([{\n    CAD: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this),\n    USD: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this),\n    NGN: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20A6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this),\n    EUR: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this),\n    INR: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20B9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this),\n    GBP: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\xA3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this),\n    KRW: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20A8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this),\n    PHP: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u20B1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this),\n    AED: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u062F.\\u0625\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this),\n    JPY: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\xA5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this)\n  }]);\n  const [isEditing, setIsEditing] = useState([{\n    isEditing: false\n  }]);\n  const [currency, setCurrency] = useState({\n    currency: \"CAD\",\n    prev_currency: \"CAD\"\n  });\n  const [values, setValues] = useState({\n    cash_investments: [{\n      id: \"chequing\",\n      value: 2000,\n      text: \"Chequing\"\n    }, {\n      id: \"savings_for_taxes\",\n      value: 4000,\n      text: \"Savings for Taxes\"\n    }, {\n      id: \"rainy_day_fund\",\n      value: 506,\n      text: \"Rainy Day Fund\"\n    }, {\n      id: \"savings_for_fun\",\n      value: 5000,\n      text: \"Savings for Fun\"\n    }, {\n      id: \"savings_for_travel\",\n      value: 400,\n      text: \"Savings for Travel\"\n    }, {\n      id: \"savings_for_personal_development\",\n      value: 200,\n      text: \"Savings for Personal Development\"\n    }, {\n      id: \"investment_1\",\n      value: 5000,\n      text: \"Investment 1\"\n    }, {\n      id: \"investment_2\",\n      value: 60000,\n      text: \"Investment 2\"\n    }, {\n      id: \"investment_3\",\n      value: 24000,\n      text: \"Investment 3\"\n    }],\n    long_term_assets: [{\n      id: \"primary_home\",\n      value: 455000,\n      text: \"Primary Home\"\n    }, {\n      id: \"second_home\",\n      value: 1564321.0,\n      text: \"Second Home\"\n    }, {\n      id: \"other\",\n      value: 2000.0,\n      text: \"Other\"\n    }],\n    short_term: [{\n      id: \"credit_card_1\",\n      value: 4342,\n      text: \"Credit Card 1\"\n    }, {\n      id: \"credit_card_2\",\n      value: 322.0,\n      text: \"Credit Card 2\"\n    }],\n    long_term_debt: [{\n      id: \"mortgage_1\",\n      value: 250999,\n      text: \"Mortgage 1\"\n    }, {\n      id: \"mortgage_2\",\n      value: 632634.0,\n      text: \"Mortgage 2\"\n    }, {\n      id: \"line_of_credit\",\n      value: 10000.0,\n      text: \"Line of Credit\"\n    }, {\n      id: \"investment_loan\",\n      value: 10000.0,\n      text: \"Investment Loan\"\n    }]\n  });\n\n  const updateInputValue = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    let values = this.state.values;\n    values[e.target.name] = e.target.value === \"\" ? 0 : e.target.value;\n    await this.setState({\n      values: values\n    });\n    fetch(\"/calculator/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      this.setState({\n        total_assets: data.total_assets,\n        total_liabilities: data.total_liabilities,\n        net_worth: data.net_worth\n      });\n    });\n  };\n\n  const convertCurrency = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    var fromCurrency = encodeURIComponent(currency[\"prev_currency\"]);\n    var toCurrency = encodeURIComponent(e.target.value);\n    fetch(\"/convert-cur/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        cashInvestments: values.cash_investments,\n        longTermAssets: values.long_term_assets,\n        shortTerm: values.short_term,\n        longTermDebt: values.long_term_debt,\n        fromCurrency: fromCurrency,\n        toCurrency: toCurrency,\n        totalAssets: networths.total_assets,\n        totalLiabilities: networths.total_liabilities,\n        networth: networths.net_worth\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      console.log(data);\n      setValues({\n        cash_investments: data.cash_investments,\n        long_term_assets: data.long_term_assets,\n        short_term: data.short_term,\n        long_term_debt: data.long_term_debt\n      });\n      setCurrency({\n        currency: toCurrency,\n        prev_currency: toCurrency\n      });\n    });\n  }; // format currency\n\n\n  const formatToCurrency = number => {\n    // changes the format of the amount to currency format\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const toggleEditing = () => {\n    // changes the format of the amount to currency format\n    setIsEditing([{\n      isEditing: !isEditing[0].isEditing\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        titles: titles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Networth, {\n        networths: networths,\n        formatToCurrency: formatToCurrency,\n        currency: currency,\n        currency_codes: currencyCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Currencyselect, {\n        currencies: currencyCodes,\n        convertCurrency: convertCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Assets, {\n        cash_investments: values.cash_investments,\n        long_term_assets: values.long_term_assets,\n        is_editing: isEditing,\n        formatToCurrency: formatToCurrency,\n        toggleEditing: toggleEditing,\n        currency: currency,\n        currency_codes: currencyCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Liabilities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Liabilities, {\n        short_term: values.short_term,\n        long_term_debt: values.long_term_debt,\n        is_editing: isEditing,\n        formatToCurrency: formatToCurrency,\n        toggleEditing: toggleEditing,\n        currency: currency,\n        currency_codes: currencyCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"36lnSkhTbZP4gwgyjgv6UDIdBh8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sylviaunimna/Desktop/net-worth-calculator/client/src/App.js"],"names":["useState","Title","Networth","Currencyselect","Assets","Liabilities","App","titles","setTitles","id","text","class_name","networths","setNetworths","total_assets","value","class","total_liabilities","net_worth","currencyCodes","setCurrencyCodes","CAD","USD","NGN","EUR","INR","GBP","KRW","PHP","AED","JPY","isEditing","setIsEditing","currency","setCurrency","prev_currency","values","setValues","cash_investments","long_term_assets","short_term","long_term_debt","updateInputValue","e","state","target","name","setState","fetch","method","headers","Accept","body","JSON","stringify","then","res","ok","json","data","convertCurrency","fromCurrency","encodeURIComponent","toCurrency","cashInvestments","longTermAssets","shortTerm","longTermDebt","totalAssets","totalLiabilities","networth","console","log","formatToCurrency","number","toString","replace","toggleEditing"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Title from \"./components/Title\";\nimport Networth from \"./components/Networth\";\nimport Currencyselect from \"./components/Currencyselect\";\nimport Assets from \"./components/Assets\";\nimport Liabilities from \"./components/Liabilities\";\n\nfunction App() {\n  const [titles, setTitles] = useState([\n    { id: \"net\", text: \"Net \", class_name: \"display-1\" },\n    { id: \"worth\", text: \"Worth \", class_name: \"display-2\" },\n    { id: \"calc\", text: \"Calculator\", class_name: \"display-3\" }\n  ]);\n  const [networths, setNetworths] = useState({\n    total_assets: {\n      id: \"total_assets\",\n      value: 2122427.0,\n      class: \"blue\",\n      text: \"Total Assets:\"\n    },\n    total_liabilities: {\n      id: \"total_liabilities\",\n      value: 908297.0,\n      class: \"orange\",\n      text: \"Total Liabilities:\"\n    },\n    net_worth: {\n      id: \"net_worth\",\n      value: 1214130.0,\n      class: \"\",\n      text: \"Net Worth:\"\n    }\n  });\n  const [currencyCodes, setCurrencyCodes] = useState([\n    {\n      CAD: <span>&#36;</span>,\n      USD: <span>&#36;</span>,\n      NGN: <span>&#8358;</span>,\n      EUR: <span>&euro;</span>,\n      INR: <span>&#8377;</span>,\n      GBP: <span>&pound;</span>,\n      KRW: <span>&#8360;</span>,\n      PHP: <span>&#8369;</span>,\n      AED: <span>&#x62f;&#x2e;&#x625;</span>,\n      JPY: <span>&#165;</span>\n    }\n  ]);\n  const [isEditing, setIsEditing] = useState([{ isEditing: false }]);\n  const [currency, setCurrency] = useState({\n    currency: \"CAD\",\n    prev_currency: \"CAD\"\n  });\n  const [values, setValues] = useState({\n    cash_investments: [\n      {\n        id: \"chequing\",\n        value: 2000,\n        text: \"Chequing\"\n      },\n      {\n        id: \"savings_for_taxes\",\n        value: 4000,\n        text: \"Savings for Taxes\"\n      },\n      {\n        id: \"rainy_day_fund\",\n        value: 506,\n        text: \"Rainy Day Fund\"\n      },\n      {\n        id: \"savings_for_fun\",\n        value: 5000,\n        text: \"Savings for Fun\"\n      },\n      {\n        id: \"savings_for_travel\",\n        value: 400,\n        text: \"Savings for Travel\"\n      },\n      {\n        id: \"savings_for_personal_development\",\n        value: 200,\n        text: \"Savings for Personal Development\"\n      },\n      {\n        id: \"investment_1\",\n        value: 5000,\n        text: \"Investment 1\"\n      },\n      {\n        id: \"investment_2\",\n        value: 60000,\n        text: \"Investment 2\"\n      },\n      {\n        id: \"investment_3\",\n        value: 24000,\n        text: \"Investment 3\"\n      }\n    ],\n    long_term_assets: [\n      {\n        id: \"primary_home\",\n        value: 455000,\n        text: \"Primary Home\"\n      },\n      {\n        id: \"second_home\",\n        value: 1564321.0,\n        text: \"Second Home\"\n      },\n      {\n        id: \"other\",\n        value: 2000.0,\n        text: \"Other\"\n      }\n    ],\n    short_term: [\n      {\n        id: \"credit_card_1\",\n        value: 4342,\n        text: \"Credit Card 1\"\n      },\n      {\n        id: \"credit_card_2\",\n        value: 322.0,\n        text: \"Credit Card 2\"\n      }\n    ],\n    long_term_debt: [\n      {\n        id: \"mortgage_1\",\n        value: 250999,\n        text: \"Mortgage 1\"\n      },\n      {\n        id: \"mortgage_2\",\n        value: 632634.0,\n        text: \"Mortgage 2\"\n      },\n      {\n        id: \"line_of_credit\",\n        value: 10000.0,\n        text: \"Line of Credit\"\n      },\n      {\n        id: \"investment_loan\",\n        value: 10000.0,\n        text: \"Investment Loan\"\n      }\n    ]\n  });\n  const updateInputValue = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    let values = this.state.values;\n    values[e.target.name] = e.target.value === \"\" ? 0 : e.target.value;\n    await this.setState({ values: values });\n    fetch(\"/calculator/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        this.setState({\n          total_assets: data.total_assets,\n          total_liabilities: data.total_liabilities,\n          net_worth: data.net_worth\n        });\n      });\n  };\n\n  const convertCurrency = async e => {\n    //gets called when an amount is edited and calls the server to get the updated totals\n    var fromCurrency = encodeURIComponent(currency[\"prev_currency\"]);\n    var toCurrency = encodeURIComponent(e.target.value);\n    fetch(\"/convert-cur/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        cashInvestments: values.cash_investments,\n        longTermAssets: values.long_term_assets,\n        shortTerm: values.short_term,\n        longTermDebt: values.long_term_debt,\n        fromCurrency: fromCurrency,\n        toCurrency: toCurrency,\n        totalAssets: networths.total_assets,\n        totalLiabilities: networths.total_liabilities,\n        networth: networths.net_worth\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        console.log(data);\n        setValues({\n          cash_investments: data.cash_investments,\n          long_term_assets: data.long_term_assets,\n          short_term: data.short_term,\n          long_term_debt: data.long_term_debt\n        });\n        setCurrency({\n          currency: toCurrency,\n          prev_currency: toCurrency\n        });\n      });\n  };\n\n  // format currency\n  const formatToCurrency = number => {\n    // changes the format of the amount to currency format\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const toggleEditing = () => {\n    // changes the format of the amount to currency format\n    setIsEditing([{ isEditing: !isEditing[0].isEditing }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"left\">\n        <Title titles={titles} />\n        <Networth\n          networths={networths}\n          formatToCurrency={formatToCurrency}\n          currency={currency}\n          currency_codes={currencyCodes}\n        />\n      </div>\n      <div className=\"right\">\n        <Currencyselect\n          currencies={currencyCodes}\n          convertCurrency={convertCurrency}\n        />\n        <br></br>\n        <br></br>\n        <h4>Assets</h4>\n        <Assets\n          cash_investments={values.cash_investments}\n          long_term_assets={values.long_term_assets}\n          is_editing={isEditing}\n          formatToCurrency={formatToCurrency}\n          toggleEditing={toggleEditing}\n          currency={currency}\n          currency_codes={currencyCodes}\n        />\n        <br></br>\n        <h4>Liabilities</h4>\n        <Liabilities\n          short_term={values.short_term}\n          long_term_debt={values.long_term_debt}\n          is_editing={isEditing}\n          formatToCurrency={formatToCurrency}\n          toggleEditing={toggleEditing}\n          currency={currency}\n          currency_codes={currencyCodes}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}